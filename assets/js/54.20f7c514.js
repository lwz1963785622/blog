(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{440:function(s,t,a){"use strict";a.r(t);var e=a(17),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"eslint-代码检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-代码检查"}},[s._v("#")]),s._v(" ESLint 代码检查")]),s._v(" "),a("p",[s._v("在协同开发过程中，每个人都有独立的编码习惯，虽然团队可以通过制定强制执行的规范来保持大家代码风格的尽量一致。但是，在实际编码过程中，个人可能会不经意地继续使用着自己的代码风格，而等到发现不一致再解决又未免有点迟。")]),s._v(" "),a("blockquote",[a("p",[s._v("ESLint是一款当前应用十分广泛的JavaScript代码检查工具，使用 Node.js 编写。ESLint 的初衷是为了让程序员可以创建自己的检测规则，使其可以在编码的过程中发现问题而不是在执行的过程中。")])]),s._v(" "),a("h3",{attrs:{id:"安装-eslint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-eslint"}},[s._v("#")]),s._v(" 安装 ESLint")]),s._v(" "),a("p",[s._v("如果仅仅想让 ESLint 成为你项目构建系统的一部分，我们可以在项目根目录进行本地安装：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" eslint --save-dev\n")])])]),a("p",[s._v("如果想使 ESLint 适用于所有的项目，建议使用全局安装，使用全局安装 ESLint 后，你使用的任何 ESLint 插件或可分享的配置也都必须在全局安装。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g eslint\n")])])]),a("p",[s._v("监测是否下载成功")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ eslint -v    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v4.15.0")]),s._v("\n")])])]),a("h3",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("如果我们要使用ESLint来检查自己的日常JavaScript代码，而并非在项目中使用的话，可以使用"),a("code",[s._v("eslint --init")]),s._v("命令来在全局生成一个规则配置文件。")]),s._v(" "),a("p",[a("code",[s._v("eslint --init")]),s._v("命令会以命令行选择交互的方式来生成这个规则文件。在输入命令后，会得到如下的结果：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("? How would you like to configure ESLint? "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Use arrow keys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Answer questions about your style\n  Use a popular style guide\n  Inspect your JavaScript file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ol",[a("li",[s._v("Answer questions about your style* 通过回答问题来生成规则文件")]),s._v(" "),a("li",[s._v("Use a popular style guide* 使用已经配置好的流行的规则(别人推荐的最佳实践)")]),s._v(" "),a("li",[s._v("Inspect your JavaScript file(s)* 检查现有的JavaScript文件来自动生成")])]),s._v(" "),a("h3",{attrs:{id:"检查规则释义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查规则释义"}},[s._v("#")]),s._v(" 检查规则释义")]),s._v(" "),a("p",[s._v(".eslintrc.js文件生成后，rules部分整体是一个json对象。键是规则的名字，值是关于此规则的配置。")]),s._v(" "),a("p",[s._v("关于每条规则名称的具体含义，我们可以通过其中文意思进行理解，或者查看ESLint官方Rules介绍文档。")]),s._v(" "),a("p",[s._v("而配置则都由这些值开始：")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('* "off" 或者0 - 代表关闭此条规则，即不做关于此规则的检测。\n* "warn" 或者 1 - 将此条规则设置为需要进行warning警告的规则，eslint程序的返回码不变。\n* "error" 或者 2 - 将此条规则设置为需要进行error报错的规则，eslint程序的返回码将变为1。\n')])])]),a("h3",{attrs:{id:"执行检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行检查"}},[s._v("#")]),s._v(" 执行检查")]),s._v(" "),a("p",[a("strong",[s._v("检测单个文件")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ eslint yourfile.js\n")])])]),a("p",[a("strong",[s._v("检测多个文件")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ eslint foo.js bar.js\n")])])]),a("p",[a("strong",[s._v("检测目录下所有文件")]),a("br"),s._v("\n这里可以指定格式，因为ESLint不止可以检查js文件。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ eslint your_directory/**.js\n")])])]),a("p",[a("strong",[s._v("检测目录")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ eslint directory_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("directory_name2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("h4",{attrs:{id:"vscode-中使用eslint-vscode格式化eslint-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode-中使用eslint-vscode格式化eslint-方法"}},[s._v("#")]),s._v(" VSCode 中使用ESLint： "),a("a",{attrs:{href:"https://www.jianshu.com/p/23a5d6194a4b",target:"_blank",rel:"noopener noreferrer"}},[s._v("VScode格式化ESlint-方法"),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("参考资料："),a("a",{attrs:{href:"https://ntnyq.github.io/use-eslint-linter-js-code/",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用ESLint进行JavaScript代码检查"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);