(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{483:function(t,e,a){"use strict";a.r(e);var s=a(17),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react样式"}},[t._v("#")]),t._v(" React样式")]),t._v(" "),a("p",[t._v("React 组件最终会生成 HTML，所以你可以使用给普通 HTML 设置 CSS 一样的方法来设置 样式。如果我们想给组件添加类名，为了避免命名冲突，React 中需要设置 className prop。此外， 也可以通过 style prop 来给组件设置行内样式，这里要注意 style prop 需要的是一个对象。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# className prop\n<Component className=\"btn\" />\n\n\n# style prop\nconst style = {\n    color: 'white',\n    backgroundImage: `url(${imgUrl})`,\n    transition: 'all'\n};\nconst component = <Component style={style} />;\n")])])]),a("h2",{attrs:{id:"react使用样式两种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react使用样式两种方式"}},[t._v("#")]),t._v(" React使用样式两种方式")]),t._v(" "),a("ul",[a("li",[t._v("className prop")]),t._v(" "),a("li",[t._v("style prop")])]),t._v(" "),a("h3",{attrs:{id:"绑定样式到style属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定样式到style属性"}},[t._v("#")]),t._v(" 绑定样式到style属性")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class RectBox extends React.Component {\n   render() {\n  \tvar RectBoxStyle = {\n    \twidth:100,\n        height:100,\n        backgroundColor:"#4B8BF4"\n    }\n    return (\n      <div style={RectBoxStyle}></div>\n    )\n  }\n}\nReactDOM.render(<RectBox />, document.querySelector("#app"))\n')])])]),a("h3",{attrs:{id:"类名方式添加样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类名方式添加样式"}},[t._v("#")]),t._v(" 类名方式添加样式")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//index.css\n.box{\n    color:#009494;\n    border:1px solid #fa0;\n    text-align:center;\n    line-height:30px;\n}\n//绑定该类名\nReactDOM.render(<div className='box'>风萧萧雨兮兮 </div>,document.body);\n")])])]),a("h2",{attrs:{id:"react样式技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react样式技巧"}},[t._v("#")]),t._v(" React样式技巧")]),t._v(" "),a("h3",{attrs:{id:"样式中的像素值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式中的像素值"}},[t._v("#")]),t._v(" 样式中的像素值")]),t._v(" "),a("p",[t._v("当设置 width 和 height 这类与大小有关的样式时，大部分会以像素为单位，此时若重复输入 px，会很麻烦。为了提高效率，React 会自动对这样的属性添加 px。比如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 渲染成 height: 10px\nconst style = { height: 10 };\nReactDOM.render(<Component style={style}>Hello</Component>, mountNode);\n")])])]),a("blockquote",[a("p",[t._v("注意，有些属性除了支持 px 为单位的像素值，还支持数字直接作为值，此时 React 并不添 加 px，如 lineHeight")])])])}),[],!1,null,null,null);e.default=n.exports}}]);